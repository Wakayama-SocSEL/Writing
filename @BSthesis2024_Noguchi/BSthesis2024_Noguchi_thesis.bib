% Encoding: UTF-8

@inproceedings{devreplay, 
    author={Ueda, Yuki and Ishio, Takashi and Ihara, Akinori and Matsumoto, Kenichi},
    booktitle={2019 IEEE 13th International Workshop on Software Clones (IWSC)}, 
    title={Mining Source Code Improvement Patterns from Similar Code Review Works}, 
    year={2019},
    volume={},
    number={},
    pages={13-19}
}

@article{deep_learnnig1,
  title={CodeRL: Mastering Code Generation through Pretrained Models and Deep Reinforcement Learning},
  author={Hung Le and Yue Wang and Akhilesh Deepak Gotmare and Silvio Savarese and Steven C. H. Hoi},
  journal={ArXiv},
  year={2022},
  volume={abs/2207.01780},
  url={https://api.semanticscholar.org/CorpusID:250280117}
}

@inproceedings{deep_learning2,
  title={Compilable Neural Code Generation with Compiler Feedback},
  author={Xin Wang and Yasheng Wang and Yao Wan and Fei Mi and Yitong Li and Pingyi Zhou and Jin Liu and Hao Wu and Xin Jiang and Qun Liu},
  booktitle={Findings},
  year={2022},
  url={https://api.semanticscholar.org/CorpusID:247362946}
}

@article{deep_learnnig3,
  title={StructCoder: Structure-Aware Transformer for Code Generation},
  author={Sindhu Tipirneni and Ming Zhu and Chandan K. Reddy},
  journal={ACM Transactions on Knowledge Discovery from Data},
  year={2022},
  volume={18},
  pages={1 - 20},
  url={https://api.semanticscholar.org/CorpusID:249605686}
}

@article{deep_learnning4,
  title={Execution-based Code Generation using Deep Reinforcement Learning},
  author={Parshin Shojaee and Aneesh Jain and Sindhu Tipirneni and Chandan K. Reddy},
  journal={ArXiv},
  year={2023},
  volume={abs/2301.13816},
  url={https://api.semanticscholar.org/CorpusID:256416258}
}

@inproceedings{reviewcost,
author = {Rigby, Peter C. and Storey, Margaret-Anne},
title = {Understanding broadcast based peer review on open source software projects},
year = {2011},
booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
pages = {541–550},
numpages = {10},
series = {ICSE '11}
}

@inproceedings{idiom,
author = {Zhang, Zejun and Xing, Zhenchang and Xia, Xin and Xu, Xiwei and Zhu, Liming},
title = {Making Python code idiomatic by automatic refactoring non-idiomatic Python code with pythonic idioms},
year = {2022},
booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {696–708},
numpages = {13},
series = {ESEC/FSE 2022}
}

@INPROCEEDINGS{AutomaticPatch,
  author={Kim, Dongsun and Nam, Jaechang and Song, Jaewoo and Kim, Sunghun},
  booktitle={2013 35th International Conference on Software Engineering (ICSE)}, 
  title={Automatic patch generation learned from human-written patches}, 
  year={2013},
  volume={},
  number={},
  pages={802-811},
}

@article{findBugs,
author = {Hovemeyer, David and Pugh, William},
title = {Finding bugs is easy},
year = {2004},
volume = {39},
number = {12},
journal = {SIGPLAN Not.},
pages = {92–106},
numpages = {15}
}

@inproceedings{finacial,
  title={Modular scale-free architecture of Colombian financial networks: Evidence and challenges with financial stability in view},
  author={Carlos Le{\'o}n},
  year={2013},
  url={https://api.semanticscholar.org/CorpusID:108554658}
}

@article{financial2,
  title={Pattern-Oriented Approach for Enterprise Architecture: TOGAF Framework},
  author={Mohamed Taleb and Omar Cherkaoui},
  journal={Journal of Software Engineering and Applications},
  year={2012},
  volume={2012},
  pages={125-140},
  url={https://api.semanticscholar.org/CorpusID:28904001}
}

@article{medical,
  title={Smart Healthcare in the Age of AI: Recent Advances, Challenges, and Future Prospects},
  author={Mahmoud M. Nasr and Md. Milon Islam and Shady Shehata and Fakhri Karray and Yuri Quintana},
  journal={IEEE Access},
  year={2021},
  volume={PP},
  pages={1-1},
  url={https://api.semanticscholar.org/CorpusID:235765838}
}

@INPROCEEDINGS{Relntancer,
  author={Hong, Shuai and Zhang, Yang and Li, Chaoshuai and Bai, Yu},
  booktitle={2022 IEEE/ACM 44th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)}, 
  title={ReInstancer: Automatically Refactoring for Instanceof Pattern Matching}, 
  year={2022},
  volume={},
  number={},
  pages={183-187},
}

@INPROCEEDINGS{don'tDIY,
  author={Rózsa, Balázs and Antal, Gábor and Ferenc, Rudolf},
  booktitle={2022 IEEE 22nd International Working Conference on Source Code Analysis and Manipulation (SCAM)}, 
  title={Don't DIY: Automatically transform legacy Python code to support structural pattern matching}, 
  year={2022},
  volume={},
  number={},
  pages={164-169}
}

@INPROCEEDINGS{prefixspan,
  author={Jian Pei and Jiawei Han and Mortazavi-Asl, B. and Pinto, H. and Qiming Chen and Dayal, U. and Mei-Chun Hsu},
  booktitle={Proceedings 17th International Conference on Data Engineering}, 
  title={PrefixSpan,: mining sequential patterns efficiently by prefix-projected pattern growth}, 
  year={2001},
  volume={},
  number={},
  pages={215-224},
}

@inproceedings{gumtree,
author = {Falleri, Jean-R\'{e}my and Morandat, Flor\'{e}al and Blanc, Xavier and Martinez, Matias and Monperrus, Martin},
title = {Fine-grained and accurate source code differencing},
year = {2014},
isbn = {9781450330138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2642937.2642982},
doi = {10.1145/2642937.2642982},
abstract = {At the heart of software evolution is a sequence of edit actions, called an edit script, made to a source code file. Since software systems are stored version by version, the edit script has to be computed from these versions, which is known as a complex task. Existing approaches usually compute edit scripts at the text granularity with only add line and delete line actions. However, inferring syntactic changes from such an edit script is hard. Since moving code is a frequent action performed when editing code, it should also be taken into account. In this paper, we tackle these issues by introducing an algorithm computing edit scripts at the abstract syntax tree granularity including move actions. Our objective is to compute edit scripts that are short and close to the original developer intent. Our algorithm is implemented in a freely-available and extensible tool that has been intensively validated.},
booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
pages = {313–324},
numpages = {12},
keywords = {ast, program comprehension, software evolution, tree differencing},
location = {Vasteras, Sweden},
series = {ASE '14}
}

@book{GoF,
  author    = {Erich Gamma and Richard Helm and Ralph Johnson and John Vlissides},
  title     = {Design Patterns: Elements of Reusable Object-Oriented Software},
  year      = {1994},
  publisher = {Addison-Wesley},
  address   = {Reading, MA},
  isbn      = {978-0201633610},
  keywords  = {Design Patterns, Object-Oriented Programming, Software Engineering}
}

@INPROCEEDINGS{not_design1,
  author={Rasool, Ghulam and Akhtar, Hassan},
  booktitle={2019 International Conference on Frontiers of Information Technology (FIT)}, 
  title={Towards A Catalog of Design Patterns Variants}, 
  year={2019},
  volume={},
  number={},
  pages={156-161},
  keywords={Design Patterns, Reverse Engineering, Variants of Patterns, Reusability, Program Comprehension},
  doi={10.1109/FIT47737.2019.00038}
}

@INPROCEEDINGS{not_design2,
  author={Jun, Hen Kian and Rana, Muhammad Ehsan},
  booktitle={2021 Third International Sustainability and Resilience Conference: Climate Change}, 
  title={Evaluating the Impact of Design Patterns on Software Maintainability: An Empirical Evaluation}, 
  year={2021},
  volume={},
  number={},
  pages={539-548},
  keywords={Climate change;Solids;Software;Production facilities;Complexity theory;Sustainable development;Resilience;Software Maintainability;Software Design Patterns;Software Complexity;Design Principles},
  doi={10.1109/IEEECONF53624.2021.9668025}
}

@report{openstack,
  title        = {Annual Report 2023},
  author       = {{Open Infrastructure Foundation}},
  year         = 2023,
  url          = {https://openinfra.dev/annual-report/2023/},
  note         = {Accessed: 2025-02-02}
}