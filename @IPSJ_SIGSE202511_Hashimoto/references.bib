@article{bazaar,
  author    = {Raymond, Eric},
  title     = {The cathedral and the bazaar},
  journal   = {Knowledge, Technology \& Policy},
  year      = {1999},
  month     = {sep},
  volume    = {12},
  issue     = {3},
  pages     = {23-49},
  doi       = {10.1007/s12130-999-1026-0},
  publisher = {Springer Science and Business Media LLC},
  issn      = {0897-1986}
}

@inproceedings{failed,
author = {Coelho, Jailton and Valente, Marco Tulio},
title = {Why modern open source projects fail},
year = {2017},
isbn = {9781450351058},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3106237.3106246},
doi = {10.1145/3106237.3106246},
abstract = {Open source is experiencing a renaissance period, due to the appearance of modern platforms and workflows for developing and maintaining public code. As a result, developers are creating open source software at speeds never seen before. Consequently, these projects are also facing unprecedented mortality rates. To better understand the reasons for the failure of modern open source projects, this paper describes the results of a survey with the maintainers of 104 popular GitHub systems that have been deprecated. We provide a set of nine reasons for the failure of these open source projects. We also show that some maintenance practices---specifically the adoption of contributing guidelines and continuous integration---have an important association with a project failure or success. Finally, we discuss and reveal the principal strategies developers have tried to overcome the failure of the studied projects.},
booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
pages = {186â€“196},
numpages = {11},
keywords = {Project failure, Open Source Software, GitHub},
location = {Paderborn, Germany},
series = {ESEC/FSE 2017}
}

@article{related1,
title = {Predicting long-time contributors for GitHub projects using machine learning},
journal = {Information and Software Technology},
volume = {138},
pages = {106616},
year = {2021},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2021.106616},
url = {https://www.sciencedirect.com/science/article/pii/S0950584921000902},
author = {Vijaya Kumar Eluri and Thomas A. Mazzuchi and Shahram Sarkani},
keywords = {Long-time contributor, GitHub, GHTorrent, BigQuery, Machine learning models},
abstract = {Context:
Many organizations develop software systems using open source software (OSS), which is risky due to the high possibility of losing support. Contributors are critical for the survival of OSS projects, but very few new contributors remain with OSS projects to become long-time contributors (LTCs). Identification of factors that contribute to become an LTC can help OSS project owners utilize limited resources to retain new contributors.
Objective:
In this paper, we investigate whether we can effectively predict new contributors to OSS repositories becoming long time contributors based on repository and contributor meta-data collected from GitHub.
Method:
We construct a dataset containing 70,899 observations from 888 most popular repositories with 56,766 contributors. Each observation represents a contributor who joined the repository and is categorized as either an LTC or a non-LTC, depending on whether their project tenure is longer than 3 years. Each observation has 31 features that are calculated using the information of the new contributor and the repository when a new contributor joins the project. We build several machine learning models, including naive Bayes, k-nearest neighbor, logistic regression, decision tree, and random forest to predict LTC validated using 10-fold cross-validation. We compare our best model with state of the art model in terms of precision, recall, F1-score, Matthews correlation coefficient (MCC), and area under the curve (AUC).
Results:
In 10-fold cross-validation, the precision, recall, F1-score, MCC, and AUC of our best model (random forest) are 0.695, 0.079, 0.140, 0.226, and 0.913, respectively. These values are 27.29%, 92.68%, 86.67%, 56.94%, and 0.55%, respectively better than the best baseline state of the art model (random forest).
Conclusion:
Compared to state of the art models, the models built using our approach use less than 50% features (31 vs 63), have no wait time of one month after the contributor joins to predict future LTC status, and produce better results.}
}

@ARTICLE{related2,
  author={Bao, Lingfeng and Xia, Xin and Lo, David and Murphy, Gail C.},
  journal={IEEE Transactions on Software Engineering}, 
  title={A Large Scale Study of Long-Time Contributor Prediction for GitHub Projects}, 
  year={2021},
  volume={47},
  number={6},
  pages={1277-1298},
  keywords={Predictive models;Feature extraction;Computer languages;Task analysis;Computer bugs;Mirrors;Long time contributor;GitHub;prediction model},
  doi={10.1109/TSE.2019.2918536}}

@INPROCEEDINGS{motivation,
  author={Yunwen Ye and Kishida, K.},
  booktitle={25th International Conference on Software Engineering, 2003. Proceedings.}, 
  title={Toward an understanding of the motivation of open source software developers}, 
  year={2003},
  volume={},
  number={},
  pages={419-429},
  keywords={Open source software;Software engineering;Collaboration;Computer science;Collaborative software;Computer languages},
  doi={10.1109/ICSE.2003.1201220}}

@INPROCEEDINGS{OTC,
  author={Lee, Amanda and Carver, Jeffrey C.},
  booktitle={2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)}, 
  title={Are One-Time Contributors Different? A Comparison to Core and Periphery Developers in FLOSS Repositories}, 
  year={2017},
  volume={},
  number={},
  pages={1-10},
  keywords={Computer bugs;Face;Data mining;Computer science;Electronic mail;Open source software;FLOSS;One-Time Contributors;OTC;repository mining},
  doi={10.1109/ESEM.2017.7}}
