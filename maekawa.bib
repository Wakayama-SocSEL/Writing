@article{matsuda,
  title={ライブラリのテストケース変更に基づく後方互換性の実証的分析},
  author={松田 和輝 and 伊原 彰紀 and 才木 一也},
  journal={ソフトウェア工学の基礎ワークショップ論文集},
  volume={28},
  number={ },
  pages={139-144},
  year={2021},
  doi={10.11309/fose.28.0_139}
}

@inproceedings{gumtree,
author = {Falleri, Jean-R\'{e}my and Morandat, Flor\'{e}al and Blanc, Xavier and Martinez, Matias and Monperrus, Martin},
title = {Fine-Grained and Accurate Source Code Differencing},
year = {2014},
isbn = {9781450330138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2642937.2642982},
doi = {10.1145/2642937.2642982},
abstract = {At the heart of software evolution is a sequence of edit actions, called an edit script, made to a source code file. Since software systems are stored version by version, the edit script has to be computed from these versions, which is known as a complex task. Existing approaches usually compute edit scripts at the text granularity with only add line and delete line actions. However, inferring syntactic changes from such an edit script is hard. Since moving code is a frequent action performed when editing code, it should also be taken into account. In this paper, we tackle these issues by introducing an algorithm computing edit scripts at the abstract syntax tree granularity including move actions. Our objective is to compute edit scripts that are short and close to the original developer intent. Our algorithm is implemented in a freely-available and extensible tool that has been intensively validated.},
booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
pages = {313–324},
numpages = {12},
keywords = {tree differencing, ast, software evolution, program comprehension},
location = {Vasteras, Sweden},
series = {ASE '14}
}